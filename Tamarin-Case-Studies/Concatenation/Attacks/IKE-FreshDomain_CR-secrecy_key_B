maude tool: 'maude'
 checking version: 3.0. OK.
 checking installation:   solved goal nr. 0 (directly): SessionKeyB( pkA, pkB.1, k.2 ) @ #i.3
  solved goal nr. 1 (directly): K( k.2 ) @ #j.4
  solved goal nr. 6 (directly):
    HashE( (~SA_B.5||'g'^~y.5||~nB.5||~infoB.5||nA.5||
            mac(pk(~skB.5), kdf(z.5, <nA.5, ~nB.5>, '4'))),
           hashB.5
    ) @ #j.11
  solved goal nr. 7 (directly):
    HashE( (c.5||SA_A.5||gX.5||nA.5||infoA.5||~nB.5||
            mac(pk(x.13), kdf(z.5, <nA.5, ~nB.5>, '3'))),
           hashA.5
    ) @ #j.12
  solved goal nr. 0 (directly): !HashVals( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( pre(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( verify(t.1, t.2, t.3) ) @ #i
  solved goal nr. 0 (directly): !KU( snd(t.1) ) @ #i
  solved goal nr. 0 (directly): B0( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( sndpre(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( sign(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( senc(t.1, t.2) ) @ #i
  solved goal nr. 2 (directly): !Key( ~skA.4 ) ▶₀ #vr.3
  solved goal nr. 0 (directly): !Key( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( col1(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( kdf(t.1, t.2, t.3) ) @ #i
  solved goal nr. 0 (directly): !KU( colip2(t.1) ) @ #i
  solved goal nr. 0 (directly): B2( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( mac(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly):
    B3( t.1, t.2, t.3, t.4, t.5, t.6, t.7 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( fst(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( colip1(t.1) ) @ #i
  solved goal nr. 3 (directly): !Key( ~skB.4 ) ▶₁ #vr.3
  solved goal nr. 2 (directly):
    B1( t.1, ~skB.6, ~cookie.6, <SA_A.6, gX.6, nA.6, infoA.6>
    ) ▶₀ #vr.5
  solved goal nr. 2 (directly):
    B2( t.1, ~skB.9, t.3, <SA_A.9, gX.9, nA.9, infoA.9> ) ▶₀ #vr.8
  solved goal nr. 4 (directly):
    B1( t.1, ~skB.9, ~cookie.15, <SA_A.9, gX.9, nA.9, infoA.9>
    ) ▶₀ #vr.14
  solved goal nr. 16 (directly): B0( t.1, ~skB.6 ) ▶₀ #vr.19
  solved goal nr. 0 (directly): !KU( pk(t.1) ) @ #i
  solved goal nr. 0 (directly): A0( t.1, t.2 ) ▶₀ #i
  solved goal nr. 2 (directly): !Key( ~skA.4 ) ▶₀ #vr.3
  solved goal nr. 31 (directly): !Key( ~skA.33 ) ▶₀ #vr.32
  solved goal nr. 32 (directly): !Key( ~skB.6 ) ▶₁ #vr.32
  solved goal nr. 3 (directly): !Key( ~skB.4 ) ▶₁ #vr.3
  solved goal nr. 0 (directly): !KU( ~t.1 ) @ #i
  solved goal nr. 0 (directly): !KU( t.1^t.2 ) @ #i
  solved goal nr. 0 (directly):
    A3( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9, t.10 ) ▶₀ #i
  solved goal nr. 0 (directly):
    A4( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9, t.10, t.11, t.12,
        t.13
    ) ▶₀ #i
  solved goal nr. 2 (directly):
    A2( ~skA.12, t.2, t.3, ~SA_A.12, ~x.12, ~nA.12, ~infoA.12, t.9
    ) ▶₀ #vr.11
  solved goal nr. 2 (directly):
    A3( ~skA.15, t.2, t.3, ~SA_A.15, ~x.15, ~nA.15, ~infoA.15,
        <SA_B.15, gY.15, nB.15, infoB.15>, t.9, t.10
    ) ▶₀ #vr.14
  solved goal nr. 5 (directly): !HashVals( ~t.1 ) ▶₁ #vr.6
  solved goal nr. 13 (directly):
    A1( ~skA.12, t.2, ~SA_A.12, ~x.12, ~nA.12, ~infoA.12 ) ▶₀ #vr.23
  solved goal nr. 22 (directly): B0( t.1, ~skB.9 ) ▶₀ #vr.28
  solved goal nr. 19 (directly): A0( ~skA.12, t.2 ) ▶₀ #vr.29
  solved goal nr. 37 (directly): !Key( ~skA.42 ) ▶₀ #vr.41
  solved goal nr. 0 (directly):
    A2( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8 ) ▶₀ #i
  solved goal nr. 21 (directly): !Key( ~skA.12 ) ▶₀ #vr.35
  solved goal nr. 2 (directly):
    A1( ~skA.10, t.2, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10 ) ▶₀ #vr.9
  solved goal nr. 0 (directly): !KU( col2(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( sdec(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly):
    A1( t.1, t.2, t.3, t.4, t.5, t.6 ) ▶₀ #i
  solved goal nr. 38 (directly): !Key( ~skB.9 ) ▶₁ #vr.41
  solved goal nr. 2 (directly): A0( ~skA.8, t.2 ) ▶₀ #vr.7
  solved goal nr. 4 (directly): !Key( ~skA.8 ) ▶₀ #vr.13
  solved goal nr. 5 (directly): !Key( ~skB.14 ) ▶₁ #vr.13
  solved goal nr. 0 (directly): B1( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 22 (directly): !Key( ~skB.36 ) ▶₁ #vr.35
  solved goal nr. 2 (directly): B0( t.1, ~skB.6 ) ▶₀ #vr.5
  solved goal nr. 4 (directly):
    A2( ~skA.15, t.2, t.3, ~SA_A.15, ~x.15, ~nA.15, ~infoA.15, t.9
    ) ▶₀ #vr.16
  solved goal nr. 8 (directly): A0( ~skA.10, t.2 ) ▶₀ #vr.15
  solved goal nr. 10 (directly): !Key( ~skA.10 ) ▶₀ #vr.21
  solved goal nr. 11 (directly): !Key( ~skB.22 ) ▶₁ #vr.21
  solved goal nr. 4 (directly):
    A3( ~skA.10, pkB.10, cookie.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10,
        <SA_B.10, gY.10, nB.10, infoB.10>, m1.10, m2.10
    ) ▶₀ #vr.9
  solved goal nr. 19 (directly):
    A1( ~skA.15, t.2, ~SA_A.15, ~x.15, ~nA.15, ~infoA.15 ) ▶₀ #vr.28
  solved goal nr. 4 (directly):
    A3( ~skA.7, pkB.7, cookie.7, ~SA_A.7, ~x.7, ~nA.7, ~infoA.7,
        <SA_B.7, gY.7, nB.7, infoB.7>, m1.7, m2.7
    ) ▶₀ #vr.6
  solved goal nr. 6 (directly):
    A2( ~skA.10, pkB.10, cookie.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10,
        m1.10
    ) ▶₀ #vr.11
  solved goal nr. 25 (directly): A0( ~skA.15, t.2 ) ▶₀ #vr.34
  solved goal nr. 14 (directly):
    A2( ~skA.7, pkB.7, cookie.7, ~SA_A.7, ~x.7, ~nA.7, ~infoA.7, m1.7
    ) ▶₀ #vr.18
  solved goal nr. 27 (directly): !Key( ~skA.15 ) ▶₀ #vr.40
  solved goal nr. 21 (directly):
    A1( ~skA.10, pkB.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10 ) ▶₀ #vr.23
  solved goal nr. 28 (directly): !Key( ~skB.41 ) ▶₁ #vr.40
  solved goal nr. 4 (directly): A0( ~skA.10, pkB.10 ) ▶₀ #vr.9
  solved goal nr. 27 (directly): A0( ~skA.10, pkB.10 ) ▶₀ #vr.29
  solved goal nr. 12 (directly): !Key( ~skA.10 ) ▶₀ #vr.24
  solved goal nr. 13 (directly): !Key( ~skB.25 ) ▶₁ #vr.24
  solved goal nr. 4 (directly): A0( ~skA.7, pkB.7 ) ▶₀ #vr.6
  solved goal nr. 10 (directly): !Key( ~skA.7 ) ▶₀ #vr.18
  solved goal nr. 29 (directly): !Key( ~skA.10 ) ▶₀ #vr.35
  solved goal nr. 11 (directly): !Key( ~skB.19 ) ▶₁ #vr.18
  solved goal nr. 4 (directly): A0( ~skA.10, pkB.10 ) ▶₀ #vr.9
  solved goal nr. 15 (directly): !Key( ~skA.10 ) ▶₀ #vr.29
  solved goal nr. 30 (directly): !Key( ~skB.36 ) ▶₁ #vr.35
  solved goal nr. 16 (directly): !Key( ~skB.30 ) ▶₁ #vr.29
  solved goal nr. 4 (directly):
    A3( ~skA.10, pkB.10, cookie.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10,
        <SA_B.10, gY.10, nB.10, infoB.10>, m1.10, m2.10
    ) ▶₀ #vr.9
  solved goal nr. 29 (directly):
    A1( ~skA.7, pkB.7, ~SA_A.7, ~x.7, ~nA.7, ~infoA.7 ) ▶₀ #vr.30
  solved goal nr. 4 (directly): A0( ~skA.7, pkB.7 ) ▶₀ #vr.6
  solved goal nr. 14 (directly): !Key( ~skA.7 ) ▶₀ #vr.24
  solved goal nr. 15 (directly): !Key( ~skB.25 ) ▶₁ #vr.24
  solved goal nr. 35 (directly): A0( ~skA.7, pkB.7 ) ▶₀ #vr.36
  solved goal nr. 37 (directly): !Key( ~skA.7 ) ▶₀ #vr.42
  solved goal nr. 4 (directly): A0( ~skA.7, pkB.7 ) ▶₀ #vr.6
  solved goal nr. 38 (directly): !Key( ~skB.43 ) ▶₁ #vr.42
  solved goal nr. 14 (directly): !Key( ~skA.7 ) ▶₀ #vr.24
  solved goal nr. 15 (directly): !Key( ~skB.25 ) ▶₁ #vr.24
  solved goal nr. 14 (directly):
    A2( ~skA.10, pkB.10, cookie.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10,
        m1.10
    ) ▶₀ #vr.21
  solved goal nr. 29 (directly):
    A1( ~skA.10, pkB.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10 ) ▶₀ #vr.33
  solved goal nr. 13 (directly): !Key( ~skA.19 ) ▶₀ #vr.18
  solved goal nr. 14 (directly): !Key( ~skB.6 ) ▶₁ #vr.18
  solved goal nr. 35 (directly): A0( ~skA.10, pkB.10 ) ▶₀ #vr.39
  solved goal nr. 37 (directly): !Key( ~skA.10 ) ▶₀ #vr.45
  solved goal nr. 4 (directly):
    A1( ~skA.7, pkB.7, ~t.1, ~x.7, ~nA.7, ~infoA.7 ) ▶₀ #vr.6
  solved goal nr. 15 (directly): A0( ~skA.7, pkB.7 ) ▶₀ #vr.21
  solved goal nr. 17 (directly): !Key( ~skA.7 ) ▶₀ #vr.27
  solved goal nr. 18 (directly): !Key( ~skB.28 ) ▶₁ #vr.27
  solved goal nr. 38 (directly): !Key( ~skB.46 ) ▶₁ #vr.45
  solved goal nr. 4 (directly):
    B3( pk(x.14), ~skB.10, c.10, <SA_A.10, gX.10, nA.10, infoA.10>,
        <~SA_B.10, ~y.10, ~nB.10, ~infoB.10>, m1.10, m2.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    A1( ~skA.7, pkB.7, ~SA_A.7, ~x.7, ~t.1, ~infoA.7 ) ▶₀ #vr.6
  solved goal nr. 19 (directly): A0( ~skA.7, pkB.7 ) ▶₀ #vr.27
  solved goal nr. 21 (directly): !Key( ~skA.7 ) ▶₀ #vr.33
  solved goal nr. 4 (directly):
    A1( ~skA.10, pkB.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10 ) ▶₀ #vr.9
  solved goal nr. 22 (directly): !Key( ~skB.34 ) ▶₁ #vr.33
  solved goal nr. 17 (directly): A0( ~skA.10, pkB.10 ) ▶₀ #vr.27
  solved goal nr. 19 (directly): !Key( ~skA.10 ) ▶₀ #vr.33
  solved goal nr. 20 (directly): !Key( ~skB.34 ) ▶₁ #vr.33
  solved goal nr. 7 (directly):
    B2( pk(x.14), ~skB.10, c.10, <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.17
  solved goal nr. 9 (directly):
    B1( pk(x.14), ~skB.10, ~cookie.24,
        <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.23
  solved goal nr. 4 (directly):
    A1( ~skA.7, pkB.7, ~SA_A.7, ~x.7, ~nA.7, ~t.1 ) ▶₀ #vr.6
  solved goal nr. 19 (directly): A0( ~skA.7, pkB.7 ) ▶₀ #vr.27
  solved goal nr. 21 (directly): !Key( ~skA.7 ) ▶₀ #vr.33
  solved goal nr. 22 (directly): !Key( ~skB.34 ) ▶₁ #vr.33
  solved goal nr. 4 (directly):
    A1( ~skA.10, pkB.10, ~SA_A.10, ~x.10, ~nA.10, ~infoA.10 ) ▶₀ #vr.9
  solved goal nr. 20 (directly): A0( ~skA.10, pkB.10 ) ▶₀ #vr.32
  solved goal nr. 22 (directly): !Key( ~skA.10 ) ▶₀ #vr.38
  solved goal nr. 23 (directly): !Key( ~skB.39 ) ▶₁ #vr.38
  solved goal nr. 27 (directly): B0( pk(x.14), ~skB.10 ) ▶₀ #vr.37
  solved goal nr. 42 (directly): !Key( ~skA.51 ) ▶₀ #vr.50
  solved goal nr. 43 (directly): !Key( ~skB.10 ) ▶₁ #vr.50
  solved goal nr. 4 (directly):
    B3( pk(x.14), ~skB.10, c.10, <SA_A.10, gX.10, nA.10, infoA.10>,
        <~SA_B.10, ~y.10, ~nB.10, ~infoB.10>, m1.10, m2.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    B3( pk(x.11), ~skB.7, c.7, <SA_A.7, gX.7, nA.7, infoA.7>,
        <~SA_B.7, ~y.7, ~nB.7, ~infoB.7>, m1.7, m2.7
    ) ▶₀ #vr.6
  solved goal nr. 15 (directly):
    B2( pk(x.14), ~skB.10, c.10, <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.27
  solved goal nr. 15 (directly):
    B2( pk(x.11), ~skB.7, c.7, <SA_A.7, gX.7, nA.7, infoA.7>
    ) ▶₀ #vr.24
  solved goal nr. 17 (directly):
    B1( pk(x.14), ~skB.10, ~cookie.34,
        <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.33
  solved goal nr. 4 (directly): B0( pkA.7, ~skB.7 ) ▶₀ #vr.6
  solved goal nr. 17 (directly): !Key( ~skA.23 ) ▶₀ #vr.22
  solved goal nr. 18 (directly): !Key( ~skB.7 ) ▶₁ #vr.22
  solved goal nr. 4 (directly):
    B2( pkA.10, ~skB.10, c.10, <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.9
  solved goal nr. 17 (directly):
    B1( pk(x.11), ~skB.7, ~cookie.31, <SA_A.7, gX.7, nA.7, infoA.7>
    ) ▶₀ #vr.30
  solved goal nr. 12 (directly):
    B1( pkA.10, ~skB.10, ~cookie.25, <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.24
  solved goal nr. 35 (directly): B0( pk(x.14), ~skB.10 ) ▶₀ #vr.47
  solved goal nr. 30 (directly): B0( pkA.10, ~skB.10 ) ▶₀ #vr.38
  solved goal nr. 45 (directly): !Key( ~skA.52 ) ▶₀ #vr.51
  solved goal nr. 46 (directly): !Key( ~skB.10 ) ▶₁ #vr.51
  solved goal nr. 50 (directly): !Key( ~skA.61 ) ▶₀ #vr.60
  solved goal nr. 51 (directly): !Key( ~skB.10 ) ▶₁ #vr.60
  solved goal nr. 4 (directly):
    B2( pkA.7, ~skB.7, c.7, <SA_A.7, gX.7, nA.7, infoA.7> ) ▶₀ #vr.6
  solved goal nr. 10 (directly):
    B1( pkA.7, ~skB.7, ~cookie.19, <SA_A.7, gX.7, nA.7, infoA.7>
    ) ▶₀ #vr.18
  solved goal nr. 28 (directly): B0( pkA.7, ~skB.7 ) ▶₀ #vr.32
  solved goal nr. 4 (directly):
    B2( pkA.10, ~skB.10, c.10, <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.9
  solved goal nr. 43 (directly): !Key( ~skA.46 ) ▶₀ #vr.45
  solved goal nr. 35 (directly): B0( pk(x.11), ~skB.7 ) ▶₀ #vr.44
  solved goal nr. 15 (directly):
    B1( pkA.10, ~skB.10, ~cookie.30, <SA_A.10, gX.10, nA.10, infoA.10>
    ) ▶₀ #vr.29
  solved goal nr. 44 (directly): !Key( ~skB.7 ) ▶₁ #vr.45
  solved goal nr. 33 (directly): B0( pkA.10, ~skB.10 ) ▶₀ #vr.43
  solved goal nr. 48 (directly): !Key( ~skA.57 ) ▶₀ #vr.56
  solved goal nr. 50 (directly): !Key( ~skA.58 ) ▶₀ #vr.57
  solved goal nr. 49 (directly): !Key( ~skB.10 ) ▶₁ #vr.56
  solved goal nr. 51 (directly): !Key( ~skB.7 ) ▶₁ #vr.57
  solved goal nr. 4 (directly):
    B2( pkA.7, ~skB.7, c.7, <SA_A.7, gX.7, nA.7, infoA.7> ) ▶₀ #vr.6
  solved goal nr. 14 (directly):
    B1( pkA.7, ~skB.7, ~cookie.25, <SA_A.7, gX.7, nA.7, infoA.7>
    ) ▶₀ #vr.24
  solved goal nr. 32 (directly): B0( pkA.7, ~skB.7 ) ▶₀ #vr.38
  solved goal nr. 47 (directly): !Key( ~skA.52 ) ▶₀ #vr.51
  solved goal nr. 48 (directly): !Key( ~skB.7 ) ▶₁ #vr.51
  solved goal nr. 4 (directly):
    B2( pkA.7, ~skB.7, c.7, <SA_A.7, gX.7, nA.7, infoA.7> ) ▶₀ #vr.6
  solved goal nr. 14 (directly):
    B1( pkA.7, ~skB.7, ~cookie.25, <SA_A.7, gX.7, nA.7, infoA.7>
    ) ▶₀ #vr.24
  solved goal nr. 32 (directly): B0( pkA.7, ~skB.7 ) ▶₀ #vr.38
  solved goal nr. 47 (directly): !Key( ~skA.52 ) ▶₀ #vr.51
  solved goal nr. 48 (directly): !Key( ~skB.7 ) ▶₁ #vr.51
  solved goal nr. 8 (precomputed):
    !KU( kdf(z.7, <~nA.7, nB.7>, '1') ) @ #vk.11
  solved goal nr. 8 (precomputed):
    !KU( kdf(z.10, <~nA.10, nB.10>, '1') ) @ #vk.14
  solved goal nr. 9 (precomputed):
    !KU( kdf(z.10, <nA.10, ~nB.10>, '2') ) @ #vk.20
  solved goal nr. 9 (precomputed):
    !KU( kdf(z.7, <nA.7, ~nB.7>, '2') ) @ #vk.17
  solved goal nr. 3 (precomputed):
    B3( pk(x), ~skB, c, <SA_A, gX, nA, infoA>,
        <~SA_B, ~y, ~nB, ~infoB>, m1, m2
    ) ▶₀ #i
  solved goal nr. 10 (precomputed): !HashVals( ~n.1 ) ▶₀ #j.1
  solved goal nr. 12 (precomputed): !HashVals( ~n ) ▶₀ #j.2
  solved goal nr. 8 (precomputed):
    !KU( kdf(z, <nA, ~nB>, '1') ) @ #vk.1
  solved goal nr. 4 (precomputed):
    !KU( senc(<'AUTH', pk(~skA), sign(~n, ~skA)>,
              kdf(z, <nA, ~nB>, '1'))
    ) @ #vk.1
  solved goal nr. 59 (directly):
    HashE( (c.56||~SA_A.55||'g'^~x.62||~nA.18||~infoA.57||~nB||
            mac(pk(~skA), kdf('g'^(~x.62*~y.65), <~nA.18, ~nB>, '3'))),
           ~n
    ) @ #j.54
  solved goal nr. 59 (directly):
    HashE( (c.56||SA_A.55||gX.57||~nA.58||~SA_A.59||'g'^~x.60||~nA.58||
            ~infoA.61||~nB||mac(pk(~skA), kdf(z, <~nA.58, ~nB>, '3'))),
           ~n
    ) @ #j.54
  solved goal nr. 59 (directly):
    HashE( (c.56||SA_A.55||gX.57||~nA.58||x.62||~SA_A.59||'g'^~x.60||
            ~nA.58||~infoA.61||~nB||mac(pk(~skA), kdf(z, <~nA.58, ~nB>, '3'))),
           ~n
    ) @ #j.54
  solved goal nr. 59 (directly):
    HashE( (c.56||SA_A.55||gX.57||~nA.58||'g'^~x.59||~nA.58||
            ~infoA.60||~nB||mac(pk(~skA), kdf(z, <~nA.58, ~nB>, '3'))),
           ~n
    ) @ #j.54
  solved goal nr. 59 (directly):
    HashE( (c.56||SA_A.55||~SA_A.63||'g'^~x.64||~nA.18||~infoA.57||
            ~nB||
            mac(pk(~skA), kdf((~SA_A.63||'g'^~x.64)^~y.62, <~nA.18, ~nB>, '3'))
           ),
           ~n
    ) @ #j.54
  solved goal nr. 59 (directly):
    HashE( (c.56||SA_A.55||x.66||~SA_A.64||'g'^~x.65||~nA.18||
            ~infoA.57||~nB||
            mac(pk(~skA),
                kdf((x.66||~SA_A.64||'g'^~x.65)^~y.63, <~nA.18, ~nB>, '3'))
           ),
           ~n
    ) @ #j.54
  solved goal nr. 59 (directly):
    HashE( (c.55||x.59||~SA_A.57||'g'^~x.63||~nA.18||~infoA.56||~nB||
            mac(pk(~skA), kdf('g'^(~x.63*~y.66), <~nA.18, ~nB>, '3'))),
           ~n
    ) @ #j.54
  solved goal nr. 45 (precomputed): !KU( sign(~n, ~skA) ) @ #vk.22
  solved goal nr. 2 (directly): splitEqs(0)
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 64 (precomputed): !KU( 'g'^(~x*~y) ) @ #vk.17
  solved goal nr. 66 (precomputed): !KU( 'g'^(~y*~x.1) ) @ #vk.18
  solved goal nr. 2 (directly): splitEqs(0)
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 70 (directly):
    HashE( (c.72||~SA_A.71||'g'^~x.80||~nA.74||~infoA.73||~nB.70||
            mac(pk(~skA), kdf('g'^(~x.80*~y.83), <~nA.74, ~nB.70>, '3'))),
           ~n
    ) @ #j.69
  solved goal nr. 70 (directly):
    HashE( (c.72||SA_A.71||gX.73||~nA.74||'g'^~x.76||~nA.74||
            ~infoA.77||~nB.70||mac(pk(~skA), kdf(z.75, <~nA.74, ~nB.70>, '3'))
           ),
           ~n
    ) @ #j.69
  solved goal nr. 70 (directly):
    HashE( (c.72||SA_A.71||~SA_A.81||'g'^~x.82||~nA.74||~infoA.73||
            ~nB.70||
            mac(pk(~skA),
                kdf((~SA_A.81||'g'^~x.82)^~y.80, <~nA.74, ~nB.70>, '3'))
           ),
           ~n
    ) @ #j.69
  solved goal nr. 70 (directly):
    HashE( (c.71||x.77||~SA_A.75||'g'^~x.81||~nA.73||~infoA.72||
            ~nB.70||
            mac(pk(~skA), kdf('g'^(~x.81*~y.84), <~nA.73, ~nB.70>, '3'))),
           ~n
    ) @ #j.69
  solved goal nr. 70 (directly):
    HashE( (c.72||SA_A.71||gX.73||~nA.74||~SA_A.76||'g'^~x.77||~nA.74||
            ~infoA.78||~nB.70||mac(pk(~skA), kdf(z.75, <~nA.74, ~nB.70>, '3'))
           ),
           ~n
    ) @ #j.69
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 81 (precomputed): !KU( x^(~y*x.1) ) @ #vk.18
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 38 (precomputed): !KU( ~nB ) @ #vk.20
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 78 (precomputed): !KU( x^inv((~y*x.1)) ) @ #vk.13
  solved goal nr. 78 (precomputed): !KU( z^inv(~y) ) @ #vk.13
  solved goal nr. 70 (directly):
    HashE( (c.72||SA_A.71||x.84||~SA_A.82||'g'^~x.83||~nA.74||
            ~infoA.73||~nB.70||
            mac(pk(~skA),
                kdf((x.84||~SA_A.82||'g'^~x.83)^~y.81, <~nA.74, ~nB.70>, '3'))
           ),
           ~n
    ) @ #j.69
  solved goal nr. 93 (precomputed): !KU( gX^(~y*inv(~x)) ) @ #vk.25
  solved goal nr. 70 (directly):
    HashE( (c.72||SA_A.71||gX.73||~nA.74||x.79||~SA_A.76||'g'^~x.77||
            ~nA.74||~infoA.78||~nB.70||
            mac(pk(~skA), kdf(z.75, <~nA.74, ~nB.70>, '3'))),
           ~n
    ) @ #j.69
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 80 (precomputed): !KU( z^inv(~y) ) @ #vk.13
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 84 (precomputed): !KU( x^(~y*x.1) ) @ #vk.18
  solved goal nr. 38 (precomputed): !KU( ~nB ) @ #vk.20
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 80 (precomputed): !KU( x^inv((~y*x.1)) ) @ #vk.13
  solved goal nr. 98 (precomputed): !KU( gX^(~y*inv(~x.1)) ) @ #vk.25
  solved goal nr. 75 (precomputed):
    !KU( (~SA_A.1||'g'^~x)^(~y*inv(~x)) ) @ #vk.25
  solved goal nr. 82 (precomputed):
    !KU( (x||~SA_A.1||'g'^~x.1)^(~y*inv(~x.1)) ) @ #vk.25
  solved goal nr. 69 (directly): splitEqs(3)
  solved goal nr. 2 (directly): splitEqs(0)
  solved goal nr. 76 (precomputed): !KU( 'g'^(~x*~y) ) @ #vk.18
  solved goal nr. 2 (directly): splitEqs(0)
  solved goal nr. 78 (precomputed): !KU( 'g'^(~y*~x.1) ) @ #vk.19
  solved goal nr. 69 (directly): splitEqs(3)
  solved goal nr. 89 (precomputed):
    !KU( (~SA_A.1||'g'^~x)^(~y*inv(~x)) ) @ #vk.30
  solved goal nr. 57 (directly): splitEqs(3)
  solved goal nr. 82 (precomputed):
    !KU( 'g'^(~y*x*inv(~x.1)) ) @ #vk.25
  solved goal nr. 82 (precomputed):
    !KU( 'g'^(~y*inv((x*~x.1))) ) @ #vk.25
  solved goal nr. 82 (precomputed):
    !KU( 'g'^(~y*x*inv((x.1*~x.2))) ) @ #vk.25
  solved goal nr. 78 (precomputed): !KU( gY^(~x*inv(~y)) ) @ #vk.13
  solved goal nr. 78 (precomputed): !KU( x^(x.1*inv(~y)) ) @ #vk.13
  solved goal nr. 78 (precomputed):
    !KU( x^(~x.1*x.2*inv(~y)) ) @ #vk.13
  solved goal nr. 78 (precomputed):
    !KU( x^(~x.1*x.2*inv((~y*x.3))) ) @ #vk.13
  solved goal nr. 78 (precomputed):
    !KU( x^(~x.1*inv((~y*x.2))) ) @ #vk.13
  solved goal nr. 78 (precomputed):
    !KU( x^(x.1*inv((~y*x.2))) ) @ #vk.13
  solved goal nr. 58 (precomputed): !KU( ~nA ) @ #vk.18
  solved goal nr. 64 (precomputed): !KU( ~SA_A.1 ) @ #vk.25
  solved goal nr. 67 (precomputed): !KU( ~infoA ) @ #vk.27
  solved goal nr. 65 (precomputed): !KU( 'g'^~x ) @ #vk.27
OK.

theory IKE begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, concatenation
functions: col1/2, col2/2, colip1/1, colip2/1, constcol1/0, constcol2/0,
           fst/1[destructor], kdf/3, mac/2, pair/2, pk/1, pre/1, sdec/2[destructor],
           senc/2, sign/2, snd/1[destructor], sndpre/1, true/0, verify/3[destructor]
equations:
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true











restriction originHash:
  "∀ x hs #i.
    (HashC( x, hs ) @ #i) ⇒ (∃ #j. (HashE( x, hs ) @ #j) ∧ (#j < #i))"

restriction deterministic:
  "∀ x1 x2 h1 h2 #i #j.
    (((HashE( x1, h1 ) @ #i) ∧ (HashE( x2, h2 ) @ #j)) ∧ (x1 = x2)) ⇒
    (#i = #j)"
  // safety formula

rule (modulo E) hashVals:
   [ Fr( ~n ) ] --> [ !HashVals( ~n ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) createHash:
   [ !HashVals( ~n ) ] --[ HashE( x, ~n ), HV( ~n ) ]-> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) attHash:
   [ In( x ), !HashVals( ~hs ) ] --[ HashC( x, ~hs ) ]-> [ Out( ~hs ) ]

  /* has exactly the trivial AC variant */

lemma orig [sources]:
  all-traces
  "∀ x hs #i.
    (HashC( x, hs ) @ #i) ⇒
    ((∃ #j. (HV( hs ) @ #j) ∧ (#j < #i)) ∨
     (∃ #j. (!KU( hs ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ x hs #i.
  (HashC( x, hs ) @ #i)
 ∧
  (∀ #j. (HV( hs ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (!KU( hs ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

restriction CollisionResistance:
  "∀ x1 x2 n #i #j.
    ((HashC( x1, n ) @ #i) ∧ (HashC( x2, n ) @ #j)) ⇒ (x1 = x2)"
  // safety formula

rule (modulo E) InitKeys:
   [ Fr( ~sk ) ] --[ HKey( ~sk ) ]-> [ !Key( ~sk ), Out( pk(~sk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) InitKeysBis:
   [ !Key( ~skA ), !Key( ~skB ) ]
  --[ Start( ) ]->
   [ A0( ~skA, pk(~skB) ), B0( pk(~skA), ~skB ) ]

  /* has exactly the trivial AC variant */

restriction Restr_A_0_1:
  "∀ x #NOW x.1. (Restr_A_0_1( x, x.1 ) @ #NOW) ⇒ (¬(x = x.1))"
  // safety formula

rule (modulo E) A_0:
   [ A0( ~skA, pkB ), Fr( ~SA_A ), Fr( ~x ), Fr( ~nA ), Fr( ~infoA ) ]
  --[ Share( ~x ), Restr_A_0_1( pk(~skA), pkB ) ]->
   [
   A1( ~skA, pkB, ~SA_A, ~x, ~nA, ~infoA ),
   Out( <'INIT', ~SA_A, 'g'^~x, ~nA, ~infoA> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) A_1:
   [ A1( ~skA, pkB, ~SA_A, ~x, ~nA, ~infoA ), In( <'INIT', cookie> ) ]
  --[ ReceivedCookie( cookie ) ]->
   [
   A2( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA,
       <'INIT', cookie, ~SA_A, 'g'^~x, ~nA, ~infoA>
   ),
   Out( <'INIT', cookie, ~SA_A, 'g'^~x, ~nA, ~infoA> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) A_2:
   [
   A2( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, mC ),
   In( <'INIT', SA_B, gY, nB, infoB> )
   ]
  --[ InitA( pk(~skA), pkB, ~nA, nB, mC, <'INIT', SA_B, gY, nB, infoB> )
  ]->
   [
   A3( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, <SA_B, gY, nB, infoB>, mC,
       <'INIT', SA_B, gY, nB, infoB>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) A_3:
   [
   A3( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, <SA_B, gY, nB, infoB>, m1,
       m2
   )
   ]
  --[
  SendEnc( senc(<'AUTH', pk(~skA), sign(hashA, ~skA)>,
                kdf(gY^~x, <~nA, nB>, '1'))
  ),
  TranscriptA( <cookie, ~SA_A, 'g'^~x, ~nA, ~infoA, nB, 
                mac(pk(~skA), kdf(gY^~x, <~nA, nB>, '3'))>
  ),
  InitATrans( pk(~skA), pkB,
              (cookie||~SA_A||'g'^~x||~nA||~infoA||nB||
               mac(pk(~skA), kdf(gY^~x, <~nA, nB>, '3')))
  ),
  HashC( (cookie||~SA_A||'g'^~x||~nA||~infoA||nB||
          mac(pk(~skA), kdf(gY^~x, <~nA, nB>, '3'))),
         hashA
  )
  ]->
   [
   A4( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, <SA_B, gY, nB, infoB>, m1,
       m2, kdf(gY^~x, <~nA, nB>, '1'), kdf(gY^~x, <~nA, nB>, '2'),
       mac(pkB, kdf(gY^~x, <~nA, nB>, '4'))
   ),
   Out( senc(<'AUTH', pk(~skA), sign(hashA, ~skA)>,
             kdf(gY^~x, <~nA, nB>, '1'))
   )
   ]

  /*
  rule (modulo AC) A_3:
     [
     A3( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, <SA_B, gY, nB, infoB>, m1,
         m2
     )
     ]
    --[
    SendEnc( senc(<'AUTH', pk(~skA), sign(hashA, ~skA)>,
                  kdf(z, <~nA, nB>, '1'))
    ),
    TranscriptA( <cookie, ~SA_A, 'g'^~x, ~nA, ~infoA, nB, 
                  mac(pk(~skA), kdf(z, <~nA, nB>, '3'))>
    ),
    InitATrans( pk(~skA), pkB,
                (cookie||~SA_A||'g'^~x||~nA||~infoA||nB||
                 mac(pk(~skA), kdf(z, <~nA, nB>, '3')))
    ),
    HashC( (cookie||~SA_A||'g'^~x||~nA||~infoA||nB||
            mac(pk(~skA), kdf(z, <~nA, nB>, '3'))),
           hashA
    )
    ]->
     [
     A4( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, <SA_B, gY, nB, infoB>, m1,
         m2, kdf(z, <~nA, nB>, '1'), kdf(z, <~nA, nB>, '2'),
         mac(pkB, kdf(z, <~nA, nB>, '4'))
     ),
     Out( senc(<'AUTH', pk(~skA), sign(hashA, ~skA)>, kdf(z, <~nA, nB>, '1'))
     )
     ]
    variants (modulo AC)
    1. ~x    = ~x.20
       gY    = gY.23
       z     = gY.23^~x.20
    
    2. ~x    = ~x.27
       gY    = z.37^inv(~x.27)
       z     = z.37
    
    3. ~x    = ~x.168
       gY    = x.329^x.330
       z     = x.329^(~x.168*x.330)
    
    4. ~x    = ~x.171
       gY    = x.335^inv((~x.171*x.336))
       z     = x.335^inv(x.336)
    
    5. ~x    = ~x.171
       gY    = x.335^(x.336*inv(~x.171))
       z     = x.335^x.336
    
    6. ~x    = ~x.172
       gY    = x.336^(x.337*inv((~x.172*x.338)))
       z     = x.336^(x.337*inv(x.338))
    
    7. gY    = grpid
       z     = grpid
  */

restriction Restr_A_4_1:
  "∀ x #NOW. (Restr_A_4_1( x ) @ #NOW) ⇒ (x = true)"
  // safety formula

restriction Restr_A_4_2:
  "∀ x #NOW x.1. (Restr_A_4_2( x, x.1 ) @ #NOW) ⇒ (x = x.1)"
  // safety formula

rule (modulo E) A_4:
   [
   A4( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, <SA_B, gY, nB, infoB>, m1,
       m2, k1, k2, macB
   ),
   In( senc(<'AUTH', pkbTest, sigBTest>, k2) )
   ]
  --[
  HashC( (SA_B||gY||nB||infoB||~nA||macB), hashB ),
  AcceptA( pk(~skA), pkB, ~nA, nB, m1, m2 ),
  SessionKeyA( pk(~skA), pkB, k1 ),
  Restr_A_4_1( verify(sigBTest, hashB, pkbTest) ),
  Restr_A_4_2( pkbTest, pkB )
  ]->
   [ ]

  /*
  rule (modulo AC) A_4:
     [
     A4( ~skA, pkB, cookie, ~SA_A, ~x, ~nA, ~infoA, <SA_B, gY, nB, infoB>, m1,
         m2, k1, k2, macB
     ),
     In( senc(<'AUTH', pkbTest, sigBTest>, k2) )
     ]
    --[
    HashC( (SA_B||gY||nB||infoB||~nA||macB), hashB ),
    AcceptA( pk(~skA), pkB, ~nA, nB, m1, m2 ),
    SessionKeyA( pk(~skA), pkB, k1 ), Restr_A_4_1( z ),
    Restr_A_4_2( pkbTest, pkB )
    ]->
     [ ]
    variants (modulo AC)
    1. hashB = hashB.23
       pkbTest
             = pkbTest.32
       sigBTest
             = sigBTest.33
       z     = verify(sigBTest.33, hashB.23, pkbTest.32)
    
    2. hashB = hashB.32
       pkbTest
             = pk(x.54)
       sigBTest
             = sign(hashB.32, x.54)
       z     = true
  */

restriction Restr_B_0_1:
  "∀ x #NOW x.1. (Restr_B_0_1( x, x.1 ) @ #NOW) ⇒ (¬(x = x.1))"
  // safety formula

rule (modulo E) B_0:
   [ B0( pkA, ~skB ), In( <'INIT', SA_A, gX, nA, infoA> ), Fr( ~cookie ) ]
  --[ Restr_B_0_1( pk(~skB), pkA ) ]->
   [
   B1( pkA, ~skB, ~cookie, <SA_A, gX, nA, infoA> ), Out( <'INIT', ~cookie> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) B_1:
   [
   B1( pkA, ~skB, ~cookie, <SA_A, gX, nA, infoA> ),
   In( <'INIT', c, SA_A, gX, nA, infoA> )
   ]
  -->
   [ B2( pkA, ~skB, c, <SA_A, gX, nA, infoA> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) B_2:
   [
   B2( pkA, ~skB, c, <SA_A, gX, nA, infoA> ), Fr( ~SA_B ), Fr( ~y ),
   Fr( ~nB ), Fr( ~infoB )
   ]
  --[
  InitB( pk(~skB), pkA, nA, ~nB, <'INIT', c, SA_A, gX, nA, infoA>,
         <'INIT', ~SA_B, 'g'^~y, ~nB, ~infoB>
  ),
  Share( ~y )
  ]->
   [
   B3( pkA, ~skB, c, <SA_A, gX, nA, infoA>, <~SA_B, ~y, ~nB, ~infoB>,
       <'INIT', c, SA_A, gX, nA, infoA>, <'INIT', ~SA_B, 'g'^~y, ~nB, ~infoB>
   ),
   Out( <'INIT', ~SA_B, 'g'^~y, ~nB, ~infoB> )
   ]

  /* has exactly the trivial AC variant */

restriction Restr_B_3_1:
  "∀ x #NOW. (Restr_B_3_1( x ) @ #NOW) ⇒ (x = true)"
  // safety formula

restriction Restr_B_3_2:
  "∀ x #NOW x.1. (Restr_B_3_2( x, x.1 ) @ #NOW) ⇒ (x = x.1)"
  // safety formula

rule (modulo E) B_3:
   [
   B3( pkA, ~skB, c, <SA_A, gX, nA, infoA>, <~SA_B, ~y, ~nB, ~infoB>, m1, m2
   ),
   In( senc(<'AUTH', pkaTest, sigATest>, kdf(gX^~y, <nA, ~nB>, '1')) )
   ]
  --[
  HashC( (~SA_B||'g'^~y||~nB||~infoB||nA||
          mac(pk(~skB), kdf(gX^~y, <nA, ~nB>, '4'))),
         hashB
  ),
  HashC( (c||SA_A||gX||nA||infoA||~nB||mac(pkA, kdf(gX^~y, <nA, ~nB>, '3'))
         ),
         hashA
  ),
  AcceptB( pk(~skB), pkA, nA, ~nB, m1, m2 ),
  AcceptBTrans( pk(~skB), pkA,
                (c||SA_A||gX||nA||infoA||~nB||mac(pkA, kdf(gX^~y, <nA, ~nB>, '3')))
  ),
  SessionKeyB( pk(~skB), pkA, kdf(gX^~y, <nA, ~nB>, '1') ),
  Restr_B_3_1( verify(sigATest, hashA, pkaTest) ),
  Restr_B_3_2( pkaTest, pkA )
  ]->
   [
   Out( senc(<'AUTH', pk(~skB), sign(hashB, ~skB)>,
             kdf(gX^~y, <nA, ~nB>, '2'))
   )
   ]

  /*
  rule (modulo AC) B_3:
     [
     B3( pkA, ~skB, c, <SA_A, gX, nA, infoA>, <~SA_B, ~y, ~nB, ~infoB>, m1, m2
     ),
     In( senc(<'AUTH', pkaTest, sigATest>, kdf(z, <nA, ~nB>, '1')) )
     ]
    --[
    HashC( (~SA_B||'g'^~y||~nB||~infoB||nA||
            mac(pk(~skB), kdf(z, <nA, ~nB>, '4'))),
           hashB
    ),
    HashC( (c||SA_A||gX||nA||infoA||~nB||mac(pkA, kdf(z, <nA, ~nB>, '3'))),
           hashA
    ),
    AcceptB( pk(~skB), pkA, nA, ~nB, m1, m2 ),
    AcceptBTrans( pk(~skB), pkA,
                  (c||SA_A||gX||nA||infoA||~nB||mac(pkA, kdf(z, <nA, ~nB>, '3')))
    ),
    SessionKeyB( pk(~skB), pkA, kdf(z, <nA, ~nB>, '1') ), Restr_B_3_1( z.1 ),
    Restr_B_3_2( pkaTest, pkA )
    ]->
     [
     Out( senc(<'AUTH', pk(~skB), sign(hashB, ~skB)>, kdf(z, <nA, ~nB>, '2'))
     )
     ]
    variants (modulo AC)
     1. ~y    = ~y.39
        gX    = gX.42
        hashA = hashA.43
        pkaTest
              = pkaTest.50
        sigATest
              = sigATest.51
        z     = gX.42^~y.39
        z.1   = verify(sigATest.51, hashA.43, pkaTest.50)
    
     2. ~y    = ~y.41
        gX    = z.55^inv(~y.41)
        hashA = hashA.45
        pkaTest
              = pkaTest.52
        sigATest
              = sigATest.53
        z     = z.55
        z.1   = verify(sigATest.53, hashA.45, pkaTest.52)
    
     3. ~y    = ~y.210
        gX    = x.413^x.414
        hashA = hashA.214
        pkaTest
              = pkaTest.221
        sigATest
              = sigATest.222
        z     = x.413^(~y.210*x.414)
        z.1   = verify(sigATest.222, hashA.214, pkaTest.221)
    
     4. ~y    = ~y.213
        gX    = x.419^inv((~y.213*x.420))
        hashA = hashA.217
        pkaTest
              = pkaTest.224
        sigATest
              = sigATest.225
        z     = x.419^inv(x.420)
        z.1   = verify(sigATest.225, hashA.217, pkaTest.224)
    
     5. ~y    = ~y.213
        gX    = x.419^(x.420*inv(~y.213))
        hashA = hashA.217
        pkaTest
              = pkaTest.224
        sigATest
              = sigATest.225
        z     = x.419^x.420
        z.1   = verify(sigATest.225, hashA.217, pkaTest.224)
    
     6. ~y    = ~y.214
        gX    = x.420^(x.421*inv((~y.214*x.422)))
        hashA = hashA.218
        pkaTest
              = pkaTest.225
        sigATest
              = sigATest.226
        z     = x.420^(x.421*inv(x.422))
        z.1   = verify(sigATest.226, hashA.218, pkaTest.225)
    
     7. ~y    = ~y.216
        gX    = gX.219
        hashA = hashA.220
        pkaTest
              = pk(x.426)
        sigATest
              = sign(hashA.220, x.426)
        z     = gX.219^~y.216
        z.1   = true
    
     8. ~y    = ~y.218
        gX    = x.421^x.422
        hashA = hashA.222
        pkaTest
              = pk(x.430)
        sigATest
              = sign(hashA.222, x.430)
        z     = x.421^(~y.218*x.422)
        z.1   = true
    
     9. ~y    = ~y.220
        gX    = z.234^inv(~y.220)
        hashA = hashA.224
        pkaTest
              = pk(x.434)
        sigATest
              = sign(hashA.224, x.434)
        z     = z.234
        z.1   = true
    
    10. ~y    = ~y.221
        gX    = x.427^inv((~y.221*x.428))
        hashA = hashA.225
        pkaTest
              = pk(x.436)
        sigATest
              = sign(hashA.225, x.436)
        z     = x.427^inv(x.428)
        z.1   = true
    
    11. ~y    = ~y.221
        gX    = x.427^(x.428*inv(~y.221))
        hashA = hashA.225
        pkaTest
              = pk(x.436)
        sigATest
              = sign(hashA.225, x.436)
        z     = x.427^x.428
        z.1   = true
    
    12. ~y    = ~y.222
        gX    = x.428^(x.429*inv((~y.222*x.430)))
        hashA = hashA.226
        pkaTest
              = pk(x.438)
        sigATest
              = sign(hashA.226, x.438)
        z     = x.428^(x.429*inv(x.430))
        z.1   = true
    
    13. gX    = grpid
        hashA = hashA.35
        pkaTest
              = pkaTest.42
        sigATest
              = sigATest.43
        z     = grpid
        z.1   = verify(sigATest.43, hashA.35, pkaTest.42)
    
    14. gX    = grpid
        hashA = hashA.200
        pkaTest
              = pk(x.390)
        sigATest
              = sign(hashA.200, x.390)
        z     = grpid
        z.1   = true
  */

lemma helper1 [reuse]:
  all-traces "¬(∃ x #i #j. (Share( x ) @ #i) ∧ (!KU( x ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ x #i #j. (Share( x ) @ #i) ∧ (!KU( x ) @ #j)"
*/
by sorry

lemma helper2 [reuse]:
  all-traces "¬(∃ x #i #j. (HKey( x ) @ #i) ∧ (!KU( x ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ x #i #j. (HKey( x ) @ #i) ∧ (!KU( x ) @ #j)"
*/
by sorry

lemma agree_from_B_to_A_nonces_A_B:
  all-traces
  "∀ pkB pkA nB nA m1 m2 #i.
    (AcceptA( pkA, pkB, nA, nB, m1, m2 ) @ #i) ⇒
    (∃ m3 m4 #j. InitB( pkB, pkA, nA, nB, m3, m4 ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ pkB pkA nB nA m1 m2 #i.
  (AcceptA( pkA, pkB, nA, nB, m1, m2 ) @ #i)
 ∧
  ∀ m3 m4 #j. (InitB( pkB, pkA, nA, nB, m3, m4 ) @ #j) ⇒ ⊥"
*/
by sorry

lemma agree_from_A_to_B_nonces_A:
  all-traces
  "∀ pkB pkA nB nA m1 m2 #i.
    (AcceptB( pkB, pkA, nA, nB, m1, m2 ) @ #i) ⇒
    (∃ pkB2 m3 m4 #j. InitA( pkA, pkB2, nA, nB, m3, m4 ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ pkB pkA nB nA m1 m2 #i.
  (AcceptB( pkB, pkA, nA, nB, m1, m2 ) @ #i)
 ∧
  ∀ pkB2 m3 m4 #j. (InitA( pkA, pkB2, nA, nB, m3, m4 ) @ #j) ⇒ ⊥"
*/
by sorry

lemma agree_from_B_to_A_all:
  all-traces
  "∀ pkB pkA nB nA m1 m2 #i.
    (AcceptA( pkA, pkB, nA, nB, m1, m2 ) @ #i) ⇒
    (∃ #j. InitB( pkB, pkA, nA, nB, m1, m2 ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ pkB pkA nB nA m1 m2 #i.
  (AcceptA( pkA, pkB, nA, nB, m1, m2 ) @ #i)
 ∧
  ∀ #j. (InitB( pkB, pkA, nA, nB, m1, m2 ) @ #j) ⇒ ⊥"
*/
by sorry

lemma trans_auth:
  all-traces
  "∀ pkB pkA t #i.
    (AcceptBTrans( pkB, pkA, t ) @ #i) ⇒
    (∃ pkB2 #j. InitATrans( pkA, pkB2, t ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ pkB pkA t #i.
  (AcceptBTrans( pkB, pkA, t ) @ #i)
 ∧
  ∀ pkB2 #j. (InitATrans( pkA, pkB2, t ) @ #j) ⇒ ⊥"
*/
by sorry

lemma trans_auth_and_secrecy:
  all-traces
  "∀ pkB pkA t k #i #l.
    (((AcceptBTrans( pkB, pkA, t ) @ #i) ∧
      (SessionKeyB( pkB, pkA, k ) @ #i)) ∧
     (!KU( k ) @ #l)) ⇒
    (∃ pkB2 #j. InitATrans( pkA, pkB2, t ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ pkB pkA t k #i #l.
  (AcceptBTrans( pkB, pkA, t ) @ #i) ∧
  (SessionKeyB( pkB, pkA, k ) @ #i) ∧
  (!KU( k ) @ #l)
 ∧
  ∀ pkB2 #j. (InitATrans( pkA, pkB2, t ) @ #j) ⇒ ⊥"
*/
by sorry

lemma secrecy_key_A:
  all-traces
  "∀ pkA pkB k #i.
    (SessionKeyA( pkA, pkB, k ) @ #i) ⇒ (¬(∃ #j. K( k ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ pkA pkB k #i. (SessionKeyA( pkA, pkB, k ) @ #i) ∧ ∃ #j. (K( k ) @ #j)"
*/
by sorry

lemma secrecy_key_B:
  all-traces
  "∀ pkA pkB k #i.
    (SessionKeyB( pkA, pkB, k ) @ #i) ⇒ (¬(∃ #j. K( k ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ pkA pkB k #i. (SessionKeyB( pkA, pkB, k ) @ #i) ∧ ∃ #j. (K( k ) @ #j)"
*/
simplify
solve( B3( pk(x), ~skB, c, <SA_A, gX, nA, infoA>,
           <~SA_B, ~y, ~nB, ~infoB>, m1, m2
       ) ▶₀ #i )
  case B_2
  solve( !HashVals( ~n.1 ) ▶₀ #j.1 )
    case hashVals
    solve( !HashVals( ~n ) ▶₀ #j.2 )
      case hashVals
      solve( !KU( kdf(z, <nA, ~nB>, '1') ) @ #vk.1 )
        case c_kdf
        solve( !KU( senc(<'AUTH', pk(~skA), sign(~n, ~skA)>,
                         kdf(z, <nA, ~nB>, '1'))
               ) @ #vk.1 )
          case A_3_case_2
          solve( splitEqs(0) )
            case split_case_7
            solve( !KU( ~nB ) @ #vk.20 )
              case B_2
              solve( !KU( ~nA ) @ #vk.18 )
                case A_0
                solve( !KU( ~SA_A.1 ) @ #vk.25 )
                  case A_0
                  solve( !KU( ~infoA ) @ #vk.27 )
                    case A_0
                    solve( !KU( 'g'^~x ) @ #vk.27 )
                      case A_0
                      SOLVED // trace found
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma execB:
  exists-trace
  "∃ pkB pkA nB nA m1 m2 #i. AcceptB( pkB, pkA, nA, nB, m1, m2 ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ pkB pkA nB nA m1 m2 #i. (AcceptB( pkB, pkA, nA, nB, m1, m2 ) @ #i)"
*/
by sorry

lemma execA:
  exists-trace
  "∃ pkB pkA nB nA m1 m2 #i. AcceptA( pkA, pkB, nA, nB, m1, m2 ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ pkB pkA nB nA m1 m2 #i. (AcceptA( pkA, pkB, nA, nB, m1, m2 ) @ #i)"
*/
by sorry





















/*
WARNING: the following wellformedness checks failed!

unbound:
  rule `createHash' has unbound variables: 
    x
  
  rule `A_3' has unbound variables: 
    hashA
  
  rule `A_4' has unbound variables: 
    hashB
  
  rule `B_3' has unbound variables: 
    hashA, hashB
*/

end

==============================================================================
summary of summaries:

analyzed: IKE/IKE_Cookie/ikeV2_HEB_A.spthy

  WARNING: 4 wellformedness check failed!
           The analysis results might be wrong!
  
  orig (all-traces): analysis incomplete (1 steps)
  helper1 (all-traces): analysis incomplete (1 steps)
  helper2 (all-traces): analysis incomplete (1 steps)
  agree_from_B_to_A_nonces_A_B (all-traces): analysis incomplete (1 steps)
  agree_from_A_to_B_nonces_A (all-traces): analysis incomplete (1 steps)
  agree_from_B_to_A_all (all-traces): analysis incomplete (1 steps)
  trans_auth (all-traces): analysis incomplete (1 steps)
  trans_auth_and_secrecy (all-traces): analysis incomplete (1 steps)
  secrecy_key_A (all-traces): analysis incomplete (1 steps)
  secrecy_key_B (all-traces): falsified - found trace (13 steps)
  execB (exists-trace): analysis incomplete (1 steps)
  execA (exists-trace): analysis incomplete (1 steps)

==============================================================================
20.65user 6.65system 0:05.87elapsed 464%CPU (0avgtext+0avgdata 130020maxresident)k
0inputs+80outputs (0major+74545minor)pagefaults 0swaps
